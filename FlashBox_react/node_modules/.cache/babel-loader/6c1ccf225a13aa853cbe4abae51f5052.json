{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar GOOGLE_MAP_SCRIPT_BASE_URL = \"https://maps.googleapis.com/maps/api/js\";\nvar isBrowser = typeof window !== \"undefined\" && window.document;\n\nfunction ReactGoogleAutocomplete(props) {\n  var onPlaceSelected = props.onPlaceSelected,\n      apiKey = props.apiKey,\n      _props$inputAutocompl = props.inputAutocompleteValue,\n      inputAutocompleteValue = _props$inputAutocompl === undefined ? \"new-password\" : _props$inputAutocompl,\n      _props$options = props.options;\n  _props$options = _props$options === undefined ? {} : _props$options;\n\n  var _props$options$types = _props$options.types,\n      types = _props$options$types === undefined ? [\"(cities)\"] : _props$options$types,\n      componentRestrictions = _props$options.componentRestrictions,\n      _props$options$fields = _props$options.fields,\n      fields = _props$options$fields === undefined ? [\"address_components\", \"geometry.location\", \"place_id\", \"formatted_address\"] : _props$options$fields,\n      bounds = _props$options.bounds,\n      options = _objectWithoutProperties(_props$options, [\"types\", \"componentRestrictions\", \"fields\", \"bounds\"]),\n      _props$googleMapsScri = props.googleMapsScriptBaseUrl,\n      googleMapsScriptBaseUrl = _props$googleMapsScri === undefined ? GOOGLE_MAP_SCRIPT_BASE_URL : _props$googleMapsScri,\n      refProp = props.refProp,\n      autocompleteRef = props.autocompleteRef,\n      rest = _objectWithoutProperties(props, [\"onPlaceSelected\", \"apiKey\", \"inputAutocompleteValue\", \"options\", \"googleMapsScriptBaseUrl\", \"refProp\", \"autocompleteRef\"]);\n\n  var inputRef = (0, _react.useRef)(null);\n  var event = (0, _react.useRef)(null);\n  var autocomplete = (0, _react.useRef)(null);\n  var googleMapsScript = (0, _react.useRef)(null);\n  var observerHack = (0, _react.useRef)(null);\n  var googleMapsScriptUrl = googleMapsScriptBaseUrl + \"?key=\" + apiKey + \"&libraries=places\";\n  var handleLoadScript = (0, _react.useCallback)(function () {\n    if (!isBrowser) return Promise.resolve();\n\n    var _document$querySelect = document.querySelectorAll(\"script[src*=\\\"\" + googleMapsScriptBaseUrl + \"\\\"\"),\n        _document$querySelect2 = _slicedToArray(_document$querySelect, 1),\n        scriptElement = _document$querySelect2[0];\n\n    if (scriptElement) {\n      return new Promise(function (resolve) {\n        // in case we already have a script on the page and it's loaded we resolve\n        if (typeof google !== \"undefined\") return resolve(); // otherwise we wait until it's loaded and resolve\n\n        scriptElement.addEventListener(\"load\", function () {\n          return resolve();\n        });\n      });\n    }\n\n    googleMapsScript.current = document.createElement(\"script\");\n    googleMapsScript.current.src = googleMapsScriptUrl;\n    document.body.appendChild(googleMapsScript.current);\n    return new Promise(function (resolve) {\n      googleMapsScript.current.addEventListener(\"load\", function () {\n        return resolve();\n      });\n    });\n  }, [googleMapsScriptBaseUrl, googleMapsScriptUrl]); // Autofill workaround adapted from https://stackoverflow.com/questions/29931712/chrome-autofill-covers-autocomplete-for-google-maps-api-v3/49161445#49161445\n\n  (0, _react.useEffect)(function () {\n    if (isBrowser && window.MutationObserver && inputRef.current) {\n      observerHack.current = new MutationObserver(function () {\n        observerHack.current.disconnect();\n        inputRef.current.autocomplete = inputAutocompleteValue;\n      });\n      observerHack.current.observe(inputRef.current, {\n        attributes: true,\n        attributeFilter: [\"autocomplete\"]\n      });\n    }\n  }, [inputAutocompleteValue]);\n  (0, _react.useEffect)(function () {\n    if (autocomplete.current) {\n      autocomplete.current.setFields(fields);\n    }\n  }, [fields]);\n  (0, _react.useEffect)(function () {\n    if (autocomplete.current) {\n      autocomplete.current.setBounds(bounds);\n    }\n  }, [bounds]);\n  (0, _react.useEffect)(function () {\n    if (autocomplete.current) {\n      autocomplete.current.setComponentRestrictions(componentRestrictions);\n    }\n  }, [componentRestrictions]);\n  (0, _react.useEffect)(function () {\n    if (autocomplete.current) {\n      autocomplete.current.setOptions(options);\n    }\n  }, [options]);\n  (0, _react.useEffect)(function () {\n    var config = _extends({}, options, {\n      types: types,\n      bounds: bounds,\n      componentRestrictions: componentRestrictions\n    });\n\n    if (autocomplete.current) return;\n\n    var handleAutoComplete = function handleAutoComplete() {\n      // eslint-disable-next-line no-undef\n      autocomplete.current = new google.maps.places.Autocomplete(inputRef.current, config);\n      if (autocompleteRef) autocompleteRef.current = autocomplete.current;\n      event.current = autocomplete.current.addListener(\"place_changed\", function () {\n        if (onPlaceSelected && autocomplete && autocomplete.current) {\n          onPlaceSelected(autocomplete.current.getPlace(), inputRef.current, autocomplete.current);\n        }\n      });\n    };\n\n    if (apiKey) {\n      handleLoadScript().then(function () {\n        return handleAutoComplete();\n      });\n    } else {\n      handleAutoComplete();\n    }\n\n    return function () {\n      return event.current ? event.current.remove() : undefined;\n    };\n  }, [types, options, fields, componentRestrictions, apiKey, onPlaceSelected, handleLoadScript, autocompleteRef, bounds]);\n  return _react2.default.createElement(\"input\", _extends({\n    ref: function ref(el) {\n      inputRef.current = el;\n      if (refProp) refProp.current = el;\n    }\n  }, rest));\n}\n\nReactGoogleAutocomplete.propTypes = {\n  apiKey: _propTypes2.default.string,\n  ref: _propTypes2.default.oneOfType([// Either a function\n  _propTypes2.default.func, // Or the instance of a DOM native element\n  _propTypes2.default.shape({\n    current: _propTypes2.default.instanceOf(Element)\n  })]),\n  autocompleteRef: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.shape({\n    current: _propTypes2.default.any\n  })]),\n  googleMapsScriptBaseUrl: _propTypes2.default.string,\n  onPlaceSelected: _propTypes2.default.func,\n  inputAutocompleteValue: _propTypes2.default.string,\n  options: _propTypes2.default.shape({\n    componentRestrictions: _propTypes2.default.object,\n    bounds: _propTypes2.default.object,\n    location: _propTypes2.default.object,\n    offset: _propTypes2.default.number,\n    origin: _propTypes2.default.object,\n    radius: _propTypes2.default.number,\n    sessionToken: _propTypes2.default.object,\n    types: _propTypes2.default.arrayOf(_propTypes2.default.string)\n  })\n};\nexports.default = (0, _react.forwardRef)(function (props, ref) {\n  return _react2.default.createElement(ReactGoogleAutocomplete, _extends({}, props, {\n    refProp: ref\n  }));\n});","map":{"version":3,"sources":["C:/Users/lozan/lotus_prog/FlashBox/mygit/node_modules/react-google-autocomplete/lib/index.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","err","Array","isArray","TypeError","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","obj","__esModule","default","_objectWithoutProperties","keys","indexOf","GOOGLE_MAP_SCRIPT_BASE_URL","isBrowser","window","document","ReactGoogleAutocomplete","props","onPlaceSelected","apiKey","_props$inputAutocompl","inputAutocompleteValue","_props$options","options","_props$options$types","types","componentRestrictions","_props$options$fields","fields","bounds","_props$googleMapsScri","googleMapsScriptBaseUrl","refProp","autocompleteRef","rest","inputRef","useRef","event","autocomplete","googleMapsScript","observerHack","googleMapsScriptUrl","handleLoadScript","useCallback","Promise","resolve","_document$querySelect","querySelectorAll","_document$querySelect2","scriptElement","google","addEventListener","current","createElement","src","body","appendChild","useEffect","MutationObserver","disconnect","observe","attributes","attributeFilter","setFields","setBounds","setComponentRestrictions","setOptions","config","handleAutoComplete","maps","places","Autocomplete","addListener","getPlace","then","remove","ref","el","propTypes","string","oneOfType","func","shape","instanceOf","Element","any","object","location","offset","number","origin","radius","sessionToken","arrayOf","forwardRef"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar GOOGLE_MAP_SCRIPT_BASE_URL = \"https://maps.googleapis.com/maps/api/js\";\nvar isBrowser = typeof window !== \"undefined\" && window.document;\n\nfunction ReactGoogleAutocomplete(props) {\n  var onPlaceSelected = props.onPlaceSelected,\n      apiKey = props.apiKey,\n      _props$inputAutocompl = props.inputAutocompleteValue,\n      inputAutocompleteValue = _props$inputAutocompl === undefined ? \"new-password\" : _props$inputAutocompl,\n      _props$options = props.options;\n  _props$options = _props$options === undefined ? {} : _props$options;\n\n  var _props$options$types = _props$options.types,\n      types = _props$options$types === undefined ? [\"(cities)\"] : _props$options$types,\n      componentRestrictions = _props$options.componentRestrictions,\n      _props$options$fields = _props$options.fields,\n      fields = _props$options$fields === undefined ? [\"address_components\", \"geometry.location\", \"place_id\", \"formatted_address\"] : _props$options$fields,\n      bounds = _props$options.bounds,\n      options = _objectWithoutProperties(_props$options, [\"types\", \"componentRestrictions\", \"fields\", \"bounds\"]),\n      _props$googleMapsScri = props.googleMapsScriptBaseUrl,\n      googleMapsScriptBaseUrl = _props$googleMapsScri === undefined ? GOOGLE_MAP_SCRIPT_BASE_URL : _props$googleMapsScri,\n      refProp = props.refProp,\n      autocompleteRef = props.autocompleteRef,\n      rest = _objectWithoutProperties(props, [\"onPlaceSelected\", \"apiKey\", \"inputAutocompleteValue\", \"options\", \"googleMapsScriptBaseUrl\", \"refProp\", \"autocompleteRef\"]);\n\n  var inputRef = (0, _react.useRef)(null);\n  var event = (0, _react.useRef)(null);\n  var autocomplete = (0, _react.useRef)(null);\n  var googleMapsScript = (0, _react.useRef)(null);\n  var observerHack = (0, _react.useRef)(null);\n  var googleMapsScriptUrl = googleMapsScriptBaseUrl + \"?key=\" + apiKey + \"&libraries=places\";\n\n  var handleLoadScript = (0, _react.useCallback)(function () {\n    if (!isBrowser) return Promise.resolve();\n\n    var _document$querySelect = document.querySelectorAll(\"script[src*=\\\"\" + googleMapsScriptBaseUrl + \"\\\"\"),\n        _document$querySelect2 = _slicedToArray(_document$querySelect, 1),\n        scriptElement = _document$querySelect2[0];\n\n    if (scriptElement) {\n      return new Promise(function (resolve) {\n        // in case we already have a script on the page and it's loaded we resolve\n        if (typeof google !== \"undefined\") return resolve();\n\n        // otherwise we wait until it's loaded and resolve\n        scriptElement.addEventListener(\"load\", function () {\n          return resolve();\n        });\n      });\n    }\n\n    googleMapsScript.current = document.createElement(\"script\");\n    googleMapsScript.current.src = googleMapsScriptUrl;\n\n    document.body.appendChild(googleMapsScript.current);\n\n    return new Promise(function (resolve) {\n      googleMapsScript.current.addEventListener(\"load\", function () {\n        return resolve();\n      });\n    });\n  }, [googleMapsScriptBaseUrl, googleMapsScriptUrl]);\n\n  // Autofill workaround adapted from https://stackoverflow.com/questions/29931712/chrome-autofill-covers-autocomplete-for-google-maps-api-v3/49161445#49161445\n  (0, _react.useEffect)(function () {\n    if (isBrowser && window.MutationObserver && inputRef.current) {\n      observerHack.current = new MutationObserver(function () {\n        observerHack.current.disconnect();\n\n        inputRef.current.autocomplete = inputAutocompleteValue;\n      });\n      observerHack.current.observe(inputRef.current, {\n        attributes: true,\n        attributeFilter: [\"autocomplete\"]\n      });\n    }\n  }, [inputAutocompleteValue]);\n\n  (0, _react.useEffect)(function () {\n    if (autocomplete.current) {\n      autocomplete.current.setFields(fields);\n    }\n  }, [fields]);\n\n  (0, _react.useEffect)(function () {\n    if (autocomplete.current) {\n      autocomplete.current.setBounds(bounds);\n    }\n  }, [bounds]);\n\n  (0, _react.useEffect)(function () {\n    if (autocomplete.current) {\n      autocomplete.current.setComponentRestrictions(componentRestrictions);\n    }\n  }, [componentRestrictions]);\n\n  (0, _react.useEffect)(function () {\n    if (autocomplete.current) {\n      autocomplete.current.setOptions(options);\n    }\n  }, [options]);\n\n  (0, _react.useEffect)(function () {\n    var config = _extends({}, options, {\n      types: types,\n      bounds: bounds,\n      componentRestrictions: componentRestrictions\n    });\n\n    if (autocomplete.current) return;\n\n    var handleAutoComplete = function handleAutoComplete() {\n      // eslint-disable-next-line no-undef\n      autocomplete.current = new google.maps.places.Autocomplete(inputRef.current, config);\n\n      if (autocompleteRef) autocompleteRef.current = autocomplete.current;\n\n      event.current = autocomplete.current.addListener(\"place_changed\", function () {\n        if (onPlaceSelected && autocomplete && autocomplete.current) {\n          onPlaceSelected(autocomplete.current.getPlace(), inputRef.current, autocomplete.current);\n        }\n      });\n    };\n\n    if (apiKey) {\n      handleLoadScript().then(function () {\n        return handleAutoComplete();\n      });\n    } else {\n      handleAutoComplete();\n    }\n\n    return function () {\n      return event.current ? event.current.remove() : undefined;\n    };\n  }, [types, options, fields, componentRestrictions, apiKey, onPlaceSelected, handleLoadScript, autocompleteRef, bounds]);\n\n  return _react2.default.createElement(\"input\", _extends({\n    ref: function ref(el) {\n      inputRef.current = el;\n      if (refProp) refProp.current = el;\n    }\n  }, rest));\n}\n\nReactGoogleAutocomplete.propTypes = {\n  apiKey: _propTypes2.default.string,\n  ref: _propTypes2.default.oneOfType([\n  // Either a function\n  _propTypes2.default.func,\n  // Or the instance of a DOM native element\n  _propTypes2.default.shape({ current: _propTypes2.default.instanceOf(Element) })]),\n  autocompleteRef: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.shape({\n    current: _propTypes2.default.any\n  })]),\n  googleMapsScriptBaseUrl: _propTypes2.default.string,\n  onPlaceSelected: _propTypes2.default.func,\n  inputAutocompleteValue: _propTypes2.default.string,\n  options: _propTypes2.default.shape({\n    componentRestrictions: _propTypes2.default.object,\n    bounds: _propTypes2.default.object,\n    location: _propTypes2.default.object,\n    offset: _propTypes2.default.number,\n    origin: _propTypes2.default.object,\n    radius: _propTypes2.default.number,\n    sessionToken: _propTypes2.default.object,\n    types: _propTypes2.default.arrayOf(_propTypes2.default.string)\n  })\n};\n\nexports.default = (0, _react.forwardRef)(function (props, ref) {\n  return _react2.default.createElement(ReactGoogleAutocomplete, _extends({}, props, { refProp: ref }));\n});"]},"metadata":{},"sourceType":"script"}